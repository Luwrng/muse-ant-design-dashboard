import React, { useState } from 'react';
import { Form, Input, Button, Typography, message, Card } from 'antd';

const { Title } = Typography;

const ForgotPass = () => {
  const [step, setStep] = useState(1);
  const [phone, setPhone] = useState('');
  const [otp, setOtp] = useState('');
  const [form] = Form.useForm();

  // B∆Ø·ªöC 1 ‚Äì Nh·∫≠p SƒêT
  const handlePhoneSubmit = () => {
    if (!phone.match(/^\d{10,11}$/)) {
      message.error('S·ªë ƒëi·ªán tho·∫°i kh√¥ng h·ª£p l·ªá!');
      return;
    }

    // ‚úÖ TODO: G·ª≠i OTP
    console.log('G·ª≠i OTP ƒë·∫øn:', phone);
    message.success('ƒê√£ g·ª≠i m√£ OTP t·ªõi s·ªë ƒëi·ªán tho·∫°i.');
    setStep(2);
  };

  // B∆Ø·ªöC 2 ‚Äì Nh·∫≠p OTP
  const handleOtpSubmit = () => {
    if (otp !== '123456') {
      message.error('M√£ OTP kh√¥ng ƒë√∫ng!');
      return;
    }

    message.success('X√°c th·ª±c OTP th√†nh c√¥ng!');
    setStep(3);
  };

  // B∆Ø·ªöC 3 ‚Äì ƒê·ªïi m·∫≠t kh·∫©u
  const handlePasswordSubmit = (values) => {
    const { password, confirmPassword } = values;

    if (password !== confirmPassword) {
      message.error('M·∫≠t kh·∫©u kh√¥ng kh·ªõp!');
      return;
    }

    console.log('ƒê·ªïi m·∫≠t kh·∫©u cho:', phone);
    message.success('ƒê·ªïi m·∫≠t kh·∫©u th√†nh c√¥ng!');
  };

  // üëá M√†u ti√™u ƒë·ªÅ theo b∆∞·ªõc
  const getStepColor = () => {
    if (step === 1) return '#1890ff'; // blue
    if (step === 2) return '#faad14'; // orange
    if (step === 3) return '#52c41a'; // green
  };

  return (
    <div
      style={{
        minHeight: '100vh',
        background: '#f0f2f5',
        display: 'flex',
        justifyContent: 'center',
        alignItems: 'center',
        padding: 16,
      }}
    >
      <Card style={{ width: 400, borderTop: `5px solid ${getStepColor()}` }}>
        <Title
          level={3}
          style={{
            textAlign: 'center',
            marginBottom: 24,
            color: getStepColor(),
          }}
        >
          {step === 1 && 'üîí X√°c nh·∫≠n s·ªë ƒëi·ªán tho·∫°i'}
          {step === 2 && 'üì© Nh·∫≠p m√£ OTP'}
          {step === 3 && 'üîë ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u'}
        </Title>

        {/* STEP 1: SƒêT */}
        {step === 1 && (
          <Form layout="vertical" onFinish={handlePhoneSubmit}>
            <Form.Item
              label="S·ªë ƒëi·ªán tho·∫°i"
              name="phone"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p s·ªë ƒëi·ªán tho·∫°i' }]}
            >
              <Input
                placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                onChange={(e) => setPhone(e.target.value)}
              />
            </Form.Item>

            <Form.Item>
              <Button
                type="primary"
                htmlType="submit"
                style={{ backgroundColor: '#1890ff', borderColor: '#1890ff' }}
                block
              >
                G·ª≠i m√£ OTP
              </Button>
            </Form.Item>
          </Form>
        )}

        {/* STEP 2: OTP */}
        {step === 2 && (
          <Form layout="vertical" onFinish={handleOtpSubmit}>
            <Form.Item
              label="Nh·∫≠p m√£ OTP"
              name="otp"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p m√£ OTP' }]}
            >
              <Input
                placeholder="VD: 123456"
                onChange={(e) => setOtp(e.target.value)}
              />
            </Form.Item>

            <Form.Item>
              <Button
                htmlType="submit"
                style={{ backgroundColor: '#faad14', borderColor: '#faad14', color: '#fff' }}
                block
              >
                X√°c nh·∫≠n OTP
              </Button>
            </Form.Item>
          </Form>
        )}

        {/* STEP 3: M·∫≠t kh·∫©u */}
        {step === 3 && (
          <Form layout="vertical" form={form} onFinish={handlePasswordSubmit}>
            <Form.Item
              label="M·∫≠t kh·∫©u m·ªõi"
              name="password"
              rules={[{ required: true, message: 'Vui l√≤ng nh·∫≠p m·∫≠t kh·∫©u m·ªõi' }]}
            >
              <Input.Password placeholder="M·∫≠t kh·∫©u m·ªõi" />
            </Form.Item>

            <Form.Item
              label="X√°c nh·∫≠n m·∫≠t kh·∫©u"
              name="confirmPassword"
              dependencies={['password']}
              rules={[
                { required: true, message: 'Vui l√≤ng x√°c nh·∫≠n m·∫≠t kh·∫©u' },
                ({ getFieldValue }) => ({
                  validator(_, value) {
                    if (!value || getFieldValue('password') === value) {
                      return Promise.resolve();
                    }
                    return Promise.reject(new Error('M·∫≠t kh·∫©u kh√¥ng kh·ªõp!'));
                  },
                }),
              ]}
            >
              <Input.Password placeholder="Nh·∫≠p l·∫°i m·∫≠t kh·∫©u" />
            </Form.Item>

            <Form.Item>
              <Button
                htmlType="submit"
                style={{ backgroundColor: '#52c41a', borderColor: '#52c41a', color: '#fff' }}
                block
              >
                ƒê·ªïi m·∫≠t kh·∫©u
              </Button>
            </Form.Item>
          </Form>
        )}
      </Card>
    </div>
  );
};

export default ForgotPass;
